image: "rust:latest"

stages:
  - build_and_test_all

variables:
  RUST_LOG: debug
  RUST_BACKTRACE: full

  # Create a random path to avoid collisions
  GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_PIPELINE_ID/mintlayer-core

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

before_script:
  - apt-get update -yqq
  - apt-get install -yqq --no-install-recommends build-essential

build:cargo:
  stage: build_and_test_all
  script:
    - rm -rf target
    # build and test
    - rustc --version && cargo --version
    - cargo test --release --all --workspace --verbose
    - cargo build --release --all --locked
    # clippy
    - rustup component add clippy
    - cargo clippy --all-features --workspace --all-targets -- -D warnings -A clippy::new_without_default -W clippy::implicit_saturating_sub -W clippy::implicit_clone -W clippy::map_unwrap_or -W clippy::unnested_or_patterns -W clippy::manual_assert -W clippy::unused_async -W clippy::mut_mut -W clippy::todo
    - cargo clippy --all-features --workspace --lib --bins --examples -- -A clippy::all -D clippy::float_arithmetic -W clippy::unwrap_used -W clippy::dbg_macro -W clippy::items_after_statements -W clippy::fallible_impl_from -W clippy::string_slice
    # cargo-deny
    - cargo install cargo-deny
    - cargo deny check advisories licenses
    # fmt
    - rustup component add rustfmt
    - cargo fmt --all -- --check
    # functional tests
    - cargo test --release -p mintlayer-test --test functional -- --ignored
    # sighash tests
    - cargo test --release -p common mixed_sighash_types -- --ignored
