[package]
name = "mintlayer-core"
description = "Bitcoin bridging blockchain node"
homepage = "https://mintlayer.org"
repository = "https://github.com/mintlayer/mintlayer-core"
readme = "README.md"
license = "MIT"
version = "0.1.0"
authors = ["Samer Afach <samer.afach@mintlayer.org>", "Ben Marsh <benjamin.marsh@mintlayer.org>", "Enrico Rubboli <enrico.rubboli@mintlayer.org>"]
edition = "2021"

[workspace]
members = [
  "accounting",                   # Accounting and balances abstractions
  "blockprod",                    # Block production with whatever consensus algorithm.
  "chainstate",                   # Code on chainstate of blocks and transactions.
  "chainstate/test-suite",        # Tests for the chainstate, separated to make use of the chainstate test framework.
  "common",                       # Everything else, until it's moved to another crate.
  "consensus",                    # Consensus related logic.
  "crypto",                       # Cryptographic primitives and their interfaces.
  "dns_server",                   # DNS-server.
  "logging",                      # Logging engine and its interfaces.
  "mempool",                      # Mempool interface and implementation.
  "mocks",                        # Mock implementations of our traits (used for testing)
  "node",                         # Node executable.
  "p2p",                          # P2p communication interfaces and protocols.
  "p2p/backend-test-suite",       # P2p backend agnostic tests.
  "pos_accounting",               # PoS accounting and balances abstractions
  "rpc",                          # Rpc abstraction and implementation.
  "script",                       # Bitcoin script and its interfaces.
  "serialization",                # Full featured serialization interfaces and implementations.
  "serialization/core",           # Serialization core tools.
  "serialization/tagged",         # Serialization for direct/tagged encoding style.
  "serialization/tagged/derive",  # direct/tagged encoding style derive macros.
  "storage",                      # storage abstraction layer and its implementation.
  "storage/backend-test-suite",   # Tests for validating storage backend implementations.
  "storage/core",                 # Core backend-agnostic storage abstraction.
  "storage/inmemory",             # In-memory storage backend implementation.
  "storage/lmdb",                 # LMDB-based persistent storage backend implementation.
  "storage/sqlite",               # SQLite-based persistent storage backend implementation.
  "subsystem",                    # Utilities for working with concurrent subsystems.
  "test",                         # Integration tests.
  "test-utils",                   # Various utilities for tests.
  "utils",                        # Various utilities.
  "utxo",                         # Utxo and related utilities (cache, undo, etc.).
  "wallet",                       # Wallet executable.
]

default-members = [
  "chainstate",
  "common",
  "crypto",
  "logging",
  "mempool",
  "node",
  "p2p",
  "rpc",
  "script",
  "serialization",
  "storage",
  "subsystem",
#  "test",
  "utils",
  "utxo",
  "wallet",
]

[dependencies]
chainstate = { path = "chainstate"}
chainstate-storage = { path = "chainstate/storage"}
chainstate-types = { path = "chainstate/types"}
common = { path = "common"}
crypto = { path = "crypto"}
logging = { path = "logging"}
mempool = { path = "mempool"}
p2p = { path = "p2p"}
rpc = { path = "rpc"}
script = { path = "script"}
serialization = { path = "serialization"}
storage = { path = "storage"}
utxo = { path = "utxo"}

[workspace.package]
edition = "2021"
rust-version = "1.67"
version = "0.1.0"
license = "MIT"

[workspace.dependencies]
async-trait = "0.1"
futures = "0.3"
hex = "0.4"
itertools = "0.10"
jsonrpsee = "0.16"
parity-scale-codec = "3.1"
serde = "1.0"
static_assertions = "1.1"
thiserror = "1.0"
tokio = "1.0"
once_cell = "1.13"

[profile.dev]
panic = "abort" # prevent panic catching (mostly for the tokio runtime)

[profile.release]
panic = "abort" # prevent panic catching (mostly for the tokio runtime)
debug-assertions = true
overflow-checks = true

[profile.test]
debug-assertions = true
overflow-checks = true

[profile.test.package.script]
opt-level = 2
