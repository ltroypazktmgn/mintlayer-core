[package]
name = "p2p"
license.workspace = true
version.workspace = true
edition.workspace = true
rust-version.workspace = true

[features]
default = []
testing_utils = ["dep:rlimit", "dep:ctor", "dep:test-utils", "tokio/test-util"]

[dependencies]
chainstate = { path = "../chainstate/" }
common = { path = "../common/" }
crypto = { path = "../crypto/" }
logging = { path = "../logging/" }
mempool = { path = "../mempool/" }
rpc = { path = "../rpc/" }
serialization = { path = "../serialization/" }
storage = { path = "../storage" }
subsystem = { path = "../subsystem/" }
test-utils = { path = "../test-utils", optional = true }
utils = { path = "../utils/" }

async-trait.workspace = true
bytes = "1.1"
ctor = { version = "0.2", optional = true}
futures.workspace = true
hex.workspace = true
itertools.workspace = true
jsonrpsee = { workspace = true, features = ["macros"] }
once_cell.workspace = true
parity-scale-codec.workspace = true
rlimit = { version = "0.9", optional = true}
serde.workspace = true
siphasher = "0.3"
snowstorm = "0.4"
socket2 = { version = "0.5", features = ["all"] }
sscanf = "0.4"
tap = "1.0"
thiserror.workspace = true
tokio = { workspace = true, default-features = false, features = ["io-util", "macros", "net", "rt", "rt-multi-thread", "sync", "time"] }
tokio-socks = { version = "0.5" }
tokio-util = {version = "0.7", default-features = false, features = ["codec"] }
void = "1.0"

[dev-dependencies]
chainstate-storage = { path = "../chainstate/storage" }
chainstate-test-framework = { path = "../chainstate/test-framework" }
consensus = { path = "../consensus" }
crypto = { path = "../crypto/" }
p2p-backend-test-suite = { path = "backend-test-suite" }
p2p-test-utils = { path = "p2p-test-utils" }
test-utils = { path = "../test-utils" }

criterion = "0.4"
portpicker = "0.1"
rstest.workspace = true

[[test]]
name = "backend_tcp"
harness = false

[[test]]
name = "backend_channels"
harness = false

[[test]]
name = "backend_noise"
harness = false

[[bench]]
name = "benches"
harness = false
